image: python:slim

test:
  stage: test
  before_script:
    - pip install --user -e .
  script:
    - python3 -m unittest

lint:
  stage: test
  before_script:
    - pip install pylint
    # Install dependencies (pylint import-error):
    - pip install --user -e .
  script:
    - pylint --rcfile=pyproject.toml postprocessing.py

black:
  stage: test
  before_script:
    - pip install black
  script:
    - black --check .

type-check:
  stage: test
  before_script:
    - pip3 install mypy
    - pip3 install -e .
  script:
    - mypy .

release:
  stage: deploy
  script:
    - VERSION=$(grep -Po '__version__ = "\K[0-9.]*' postprocessing.py)
    - |
      [ "$VERSION" != "$CI_COMMIT_TAG" ] \
        && echo "TAG and VERSION do not match" >&2 \
        && exit 1
    - pip install twine wheel
    - pip wheel --no-deps --wheel-dir dist .
    - python -c "import setuptools; setuptools.setup()" sdist
    - TWINE_PASSWORD=${CI_JOB_TOKEN} TWINE_USERNAME=gitlab-ci-token twine upload --repository-url ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi dist/*
  rules:
    - if: $CI_COMMIT_TAG

create_gitlab_release:
  stage: deploy
  image: registry.gitlab.com/gitlab-org/release-cli
  needs:
    - job: release
  rules:
    - if: $CI_COMMIT_TAG
  before_script:
    - apk add git
  script:
    - TAG_MESSAGE="$(git tag --format='%(contents)' -l $CI_COMMIT_TAG)"
    - >
      release-cli create \
        --name "$CI_COMMIT_TAG" \
        --description "$TAG_MESSAGE" \
        --tag-name "$CI_COMMIT_TAG" \
        --ref "$CI_COMMIT_TAG"
